// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/grpc/reflection/v1alpha/reflection.proto

#include "src/proto/grpc/reflection/v1alpha/reflection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpc {
namespace reflection {
namespace v1alpha {
PROTOBUF_CONSTEXPR ServerReflectionRequest::ServerReflectionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_request_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ServerReflectionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReflectionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReflectionRequestDefaultTypeInternal() {}
  union {
    ServerReflectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReflectionRequestDefaultTypeInternal _ServerReflectionRequest_default_instance_;
PROTOBUF_CONSTEXPR ExtensionRequest::ExtensionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.containing_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.extension_number_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExtensionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionRequestDefaultTypeInternal() {}
  union {
    ExtensionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionRequestDefaultTypeInternal _ExtensionRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerReflectionResponse::ServerReflectionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.valid_host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.original_request_)*/nullptr
  , /*decltype(_impl_.message_response_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ServerReflectionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReflectionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReflectionResponseDefaultTypeInternal() {}
  union {
    ServerReflectionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReflectionResponseDefaultTypeInternal _ServerReflectionResponse_default_instance_;
PROTOBUF_CONSTEXPR FileDescriptorResponse::FileDescriptorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_descriptor_proto_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileDescriptorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDescriptorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDescriptorResponseDefaultTypeInternal() {}
  union {
    FileDescriptorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDescriptorResponseDefaultTypeInternal _FileDescriptorResponse_default_instance_;
PROTOBUF_CONSTEXPR ExtensionNumberResponse::ExtensionNumberResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.extension_number_)*/{}
  , /*decltype(_impl_._extension_number_cached_byte_size_)*/{0}
  , /*decltype(_impl_.base_type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExtensionNumberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionNumberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionNumberResponseDefaultTypeInternal() {}
  union {
    ExtensionNumberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionNumberResponseDefaultTypeInternal _ExtensionNumberResponse_default_instance_;
PROTOBUF_CONSTEXPR ListServiceResponse::ListServiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServiceResponseDefaultTypeInternal() {}
  union {
    ListServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServiceResponseDefaultTypeInternal _ListServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR ServiceResponse::ServiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceResponseDefaultTypeInternal() {}
  union {
    ServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceResponseDefaultTypeInternal _ServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR ErrorResponse::ErrorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ErrorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorResponseDefaultTypeInternal() {}
  union {
    ErrorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorResponseDefaultTypeInternal _ErrorResponse_default_instance_;
}  // namespace v1alpha
}  // namespace reflection
}  // namespace grpc
static ::_pb::Metadata file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto = nullptr;

const uint32_t TableStruct_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _impl_.host_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _impl_.message_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, _impl_.containing_type_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, _impl_.extension_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _impl_.valid_host_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _impl_.original_request_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _impl_.message_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::FileDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::FileDescriptorResponse, _impl_.file_descriptor_proto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, _impl_.base_type_name_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, _impl_.extension_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ListServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ListServiceResponse, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServiceResponse, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, _impl_.error_message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpc::reflection::v1alpha::ServerReflectionRequest)},
  { 13, -1, -1, sizeof(::grpc::reflection::v1alpha::ExtensionRequest)},
  { 21, -1, -1, sizeof(::grpc::reflection::v1alpha::ServerReflectionResponse)},
  { 34, -1, -1, sizeof(::grpc::reflection::v1alpha::FileDescriptorResponse)},
  { 41, -1, -1, sizeof(::grpc::reflection::v1alpha::ExtensionNumberResponse)},
  { 49, -1, -1, sizeof(::grpc::reflection::v1alpha::ListServiceResponse)},
  { 56, -1, -1, sizeof(::grpc::reflection::v1alpha::ServiceResponse)},
  { 63, -1, -1, sizeof(::grpc::reflection::v1alpha::ErrorResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ExtensionRequest_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_._instance,
  &::grpc::reflection::v1alpha::_FileDescriptorResponse_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ExtensionNumberResponse_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ListServiceResponse_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ServiceResponse_default_instance_._instance,
  &::grpc::reflection::v1alpha::_ErrorResponse_default_instance_._instance,
};

const char descriptor_table_protodef_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2src/proto/grpc/reflection/v1alpha/refl"
  "ection.proto\022\027grpc.reflection.v1alpha\"\212\002"
  "\n\027ServerReflectionRequest\022\014\n\004host\030\001 \001(\t\022"
  "\032\n\020file_by_filename\030\003 \001(\tH\000\022 \n\026file_cont"
  "aining_symbol\030\004 \001(\tH\000\022N\n\031file_containing"
  "_extension\030\005 \001(\0132).grpc.reflection.v1alp"
  "ha.ExtensionRequestH\000\022\'\n\035all_extension_n"
  "umbers_of_type\030\006 \001(\tH\000\022\027\n\rlist_services\030"
  "\007 \001(\tH\000B\021\n\017message_request\"E\n\020ExtensionR"
  "equest\022\027\n\017containing_type\030\001 \001(\t\022\030\n\020exten"
  "sion_number\030\002 \001(\005\"\321\003\n\030ServerReflectionRe"
  "sponse\022\022\n\nvalid_host\030\001 \001(\t\022J\n\020original_r"
  "equest\030\002 \001(\01320.grpc.reflection.v1alpha.S"
  "erverReflectionRequest\022S\n\030file_descripto"
  "r_response\030\004 \001(\0132/.grpc.reflection.v1alp"
  "ha.FileDescriptorResponseH\000\022Z\n\036all_exten"
  "sion_numbers_response\030\005 \001(\01320.grpc.refle"
  "ction.v1alpha.ExtensionNumberResponseH\000\022"
  "N\n\026list_services_response\030\006 \001(\0132,.grpc.r"
  "eflection.v1alpha.ListServiceResponseH\000\022"
  "@\n\016error_response\030\007 \001(\0132&.grpc.reflectio"
  "n.v1alpha.ErrorResponseH\000B\022\n\020message_res"
  "ponse\"7\n\026FileDescriptorResponse\022\035\n\025file_"
  "descriptor_proto\030\001 \003(\014\"K\n\027ExtensionNumbe"
  "rResponse\022\026\n\016base_type_name\030\001 \001(\t\022\030\n\020ext"
  "ension_number\030\002 \003(\005\"P\n\023ListServiceRespon"
  "se\0229\n\007service\030\001 \003(\0132(.grpc.reflection.v1"
  "alpha.ServiceResponse\"\037\n\017ServiceResponse"
  "\022\014\n\004name\030\001 \001(\t\":\n\rErrorResponse\022\022\n\nerror"
  "_code\030\001 \001(\005\022\025\n\rerror_message\030\002 \001(\t2\223\001\n\020S"
  "erverReflection\022\177\n\024ServerReflectionInfo\022"
  "0.grpc.reflection.v1alpha.ServerReflecti"
  "onRequest\0321.grpc.reflection.v1alpha.Serv"
  "erReflectionResponse(\0010\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto = {
    false, false, 1352, descriptor_table_protodef_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto,
    "src/proto/grpc/reflection/v1alpha/reflection.proto",
    &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto::offsets,
    file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto, file_level_enum_descriptors_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto,
    file_level_service_descriptors_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter() {
  return &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto(&descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto);
namespace grpc {
namespace reflection {
namespace v1alpha {

// ===================================================================

class ServerReflectionRequest::_Internal {
 public:
  static const ::grpc::reflection::v1alpha::ExtensionRequest& file_containing_extension(const ServerReflectionRequest* msg);
};

const ::grpc::reflection::v1alpha::ExtensionRequest&
ServerReflectionRequest::_Internal::file_containing_extension(const ServerReflectionRequest* msg) {
  return *msg->_impl_.message_request_.file_containing_extension_;
}
void ServerReflectionRequest::set_allocated_file_containing_extension(::grpc::reflection::v1alpha::ExtensionRequest* file_containing_extension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_request();
  if (file_containing_extension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(file_containing_extension);
    if (message_arena != submessage_arena) {
      file_containing_extension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_containing_extension, submessage_arena);
    }
    set_has_file_containing_extension();
    _impl_.message_request_.file_containing_extension_ = file_containing_extension;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_extension)
}
ServerReflectionRequest::ServerReflectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServerReflectionRequest)
}
ServerReflectionRequest::ServerReflectionRequest(const ServerReflectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerReflectionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.host_){}
    , decltype(_impl_.message_request_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    _this->_impl_.host_.Set(from._internal_host(), 
      _this->GetArenaForAllocation());
  }
  clear_has_message_request();
  switch (from.message_request_case()) {
    case kFileByFilename: {
      _this->_internal_set_file_by_filename(from._internal_file_by_filename());
      break;
    }
    case kFileContainingSymbol: {
      _this->_internal_set_file_containing_symbol(from._internal_file_containing_symbol());
      break;
    }
    case kFileContainingExtension: {
      _this->_internal_mutable_file_containing_extension()->::grpc::reflection::v1alpha::ExtensionRequest::MergeFrom(
          from._internal_file_containing_extension());
      break;
    }
    case kAllExtensionNumbersOfType: {
      _this->_internal_set_all_extension_numbers_of_type(from._internal_all_extension_numbers_of_type());
      break;
    }
    case kListServices: {
      _this->_internal_set_list_services(from._internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServerReflectionRequest)
}

inline void ServerReflectionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.host_){}
    , decltype(_impl_.message_request_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_request();
}

ServerReflectionRequest::~ServerReflectionRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServerReflectionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerReflectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.host_.Destroy();
  if (has_message_request()) {
    clear_message_request();
  }
}

void ServerReflectionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerReflectionRequest::clear_message_request() {
// @@protoc_insertion_point(one_of_clear_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  switch (message_request_case()) {
    case kFileByFilename: {
      _impl_.message_request_.file_by_filename_.Destroy();
      break;
    }
    case kFileContainingSymbol: {
      _impl_.message_request_.file_containing_symbol_.Destroy();
      break;
    }
    case kFileContainingExtension: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_request_.file_containing_extension_;
      }
      break;
    }
    case kAllExtensionNumbersOfType: {
      _impl_.message_request_.all_extension_numbers_of_type_.Destroy();
      break;
    }
    case kListServices: {
      _impl_.message_request_.list_services_.Destroy();
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_REQUEST_NOT_SET;
}


void ServerReflectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.host_.ClearToEmpty();
  clear_message_request();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReflectionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.host"));
        } else
          goto handle_unusual;
        continue;
      // string file_by_filename = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_file_by_filename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.file_by_filename"));
        } else
          goto handle_unusual;
        continue;
      // string file_containing_symbol = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_file_containing_symbol();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_symbol"));
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_containing_extension(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string all_extension_numbers_of_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_all_extension_numbers_of_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.all_extension_numbers_of_type"));
        } else
          goto handle_unusual;
        continue;
      // string list_services = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_list_services();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.list_services"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerReflectionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // string file_by_filename = 3;
  if (_internal_has_file_by_filename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_by_filename().data(), static_cast<int>(this->_internal_file_by_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.file_by_filename");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_file_by_filename(), target);
  }

  // string file_containing_symbol = 4;
  if (_internal_has_file_containing_symbol()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_containing_symbol().data(), static_cast<int>(this->_internal_file_containing_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_symbol");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_file_containing_symbol(), target);
  }

  // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;
  if (_internal_has_file_containing_extension()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::file_containing_extension(this),
        _Internal::file_containing_extension(this).GetCachedSize(), target, stream);
  }

  // string all_extension_numbers_of_type = 6;
  if (_internal_has_all_extension_numbers_of_type()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_all_extension_numbers_of_type().data(), static_cast<int>(this->_internal_all_extension_numbers_of_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.all_extension_numbers_of_type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_all_extension_numbers_of_type(), target);
  }

  // string list_services = 7;
  if (_internal_has_list_services()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_list_services().data(), static_cast<int>(this->_internal_list_services().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.list_services");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_list_services(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServerReflectionRequest)
  return target;
}

size_t ServerReflectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host = 1;
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  switch (message_request_case()) {
    // string file_by_filename = 3;
    case kFileByFilename: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_by_filename());
      break;
    }
    // string file_containing_symbol = 4;
    case kFileContainingSymbol: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_containing_symbol());
      break;
    }
    // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;
    case kFileContainingExtension: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_request_.file_containing_extension_);
      break;
    }
    // string all_extension_numbers_of_type = 6;
    case kAllExtensionNumbersOfType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_all_extension_numbers_of_type());
      break;
    }
    // string list_services = 7;
    case kListServices: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReflectionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerReflectionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReflectionRequest::GetClassData() const { return &_class_data_; }


void ServerReflectionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerReflectionRequest*>(&to_msg);
  auto& from = static_cast<const ServerReflectionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  switch (from.message_request_case()) {
    case kFileByFilename: {
      _this->_internal_set_file_by_filename(from._internal_file_by_filename());
      break;
    }
    case kFileContainingSymbol: {
      _this->_internal_set_file_containing_symbol(from._internal_file_containing_symbol());
      break;
    }
    case kFileContainingExtension: {
      _this->_internal_mutable_file_containing_extension()->::grpc::reflection::v1alpha::ExtensionRequest::MergeFrom(
          from._internal_file_containing_extension());
      break;
    }
    case kAllExtensionNumbersOfType: {
      _this->_internal_set_all_extension_numbers_of_type(from._internal_all_extension_numbers_of_type());
      break;
    }
    case kListServices: {
      _this->_internal_set_list_services(from._internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerReflectionRequest::CopyFrom(const ServerReflectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReflectionRequest::IsInitialized() const {
  return true;
}

void ServerReflectionRequest::InternalSwap(ServerReflectionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.host_, lhs_arena,
      &other->_impl_.host_, rhs_arena
  );
  swap(_impl_.message_request_, other->_impl_.message_request_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReflectionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[0]);
}

// ===================================================================

class ExtensionRequest::_Internal {
 public:
};

ExtensionRequest::ExtensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ExtensionRequest)
}
ExtensionRequest::ExtensionRequest(const ExtensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExtensionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.containing_type_){}
    , decltype(_impl_.extension_number_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.containing_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.containing_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_containing_type().empty()) {
    _this->_impl_.containing_type_.Set(from._internal_containing_type(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.extension_number_ = from._impl_.extension_number_;
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ExtensionRequest)
}

inline void ExtensionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.containing_type_){}
    , decltype(_impl_.extension_number_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.containing_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.containing_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExtensionRequest::~ExtensionRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ExtensionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExtensionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.containing_type_.Destroy();
}

void ExtensionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExtensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ExtensionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.containing_type_.ClearToEmpty();
  _impl_.extension_number_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtensionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string containing_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_containing_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ExtensionRequest.containing_type"));
        } else
          goto handle_unusual;
        continue;
      // int32 extension_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.extension_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExtensionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ExtensionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string containing_type = 1;
  if (!this->_internal_containing_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_containing_type().data(), static_cast<int>(this->_internal_containing_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ExtensionRequest.containing_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_containing_type(), target);
  }

  // int32 extension_number = 2;
  if (this->_internal_extension_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_extension_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ExtensionRequest)
  return target;
}

size_t ExtensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ExtensionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string containing_type = 1;
  if (!this->_internal_containing_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_containing_type());
  }

  // int32 extension_number = 2;
  if (this->_internal_extension_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_extension_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExtensionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExtensionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExtensionRequest::GetClassData() const { return &_class_data_; }


void ExtensionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExtensionRequest*>(&to_msg);
  auto& from = static_cast<const ExtensionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_containing_type().empty()) {
    _this->_internal_set_containing_type(from._internal_containing_type());
  }
  if (from._internal_extension_number() != 0) {
    _this->_internal_set_extension_number(from._internal_extension_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionRequest::CopyFrom(const ExtensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionRequest::IsInitialized() const {
  return true;
}

void ExtensionRequest::InternalSwap(ExtensionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.containing_type_, lhs_arena,
      &other->_impl_.containing_type_, rhs_arena
  );
  swap(_impl_.extension_number_, other->_impl_.extension_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtensionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[1]);
}

// ===================================================================

class ServerReflectionResponse::_Internal {
 public:
  static const ::grpc::reflection::v1alpha::ServerReflectionRequest& original_request(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::FileDescriptorResponse& file_descriptor_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ExtensionNumberResponse& all_extension_numbers_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ListServiceResponse& list_services_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ErrorResponse& error_response(const ServerReflectionResponse* msg);
};

const ::grpc::reflection::v1alpha::ServerReflectionRequest&
ServerReflectionResponse::_Internal::original_request(const ServerReflectionResponse* msg) {
  return *msg->_impl_.original_request_;
}
const ::grpc::reflection::v1alpha::FileDescriptorResponse&
ServerReflectionResponse::_Internal::file_descriptor_response(const ServerReflectionResponse* msg) {
  return *msg->_impl_.message_response_.file_descriptor_response_;
}
const ::grpc::reflection::v1alpha::ExtensionNumberResponse&
ServerReflectionResponse::_Internal::all_extension_numbers_response(const ServerReflectionResponse* msg) {
  return *msg->_impl_.message_response_.all_extension_numbers_response_;
}
const ::grpc::reflection::v1alpha::ListServiceResponse&
ServerReflectionResponse::_Internal::list_services_response(const ServerReflectionResponse* msg) {
  return *msg->_impl_.message_response_.list_services_response_;
}
const ::grpc::reflection::v1alpha::ErrorResponse&
ServerReflectionResponse::_Internal::error_response(const ServerReflectionResponse* msg) {
  return *msg->_impl_.message_response_.error_response_;
}
void ServerReflectionResponse::set_allocated_file_descriptor_response(::grpc::reflection::v1alpha::FileDescriptorResponse* file_descriptor_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_response();
  if (file_descriptor_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(file_descriptor_response);
    if (message_arena != submessage_arena) {
      file_descriptor_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_descriptor_response, submessage_arena);
    }
    set_has_file_descriptor_response();
    _impl_.message_response_.file_descriptor_response_ = file_descriptor_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.file_descriptor_response)
}
void ServerReflectionResponse::set_allocated_all_extension_numbers_response(::grpc::reflection::v1alpha::ExtensionNumberResponse* all_extension_numbers_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_response();
  if (all_extension_numbers_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(all_extension_numbers_response);
    if (message_arena != submessage_arena) {
      all_extension_numbers_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, all_extension_numbers_response, submessage_arena);
    }
    set_has_all_extension_numbers_response();
    _impl_.message_response_.all_extension_numbers_response_ = all_extension_numbers_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.all_extension_numbers_response)
}
void ServerReflectionResponse::set_allocated_list_services_response(::grpc::reflection::v1alpha::ListServiceResponse* list_services_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_response();
  if (list_services_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(list_services_response);
    if (message_arena != submessage_arena) {
      list_services_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_services_response, submessage_arena);
    }
    set_has_list_services_response();
    _impl_.message_response_.list_services_response_ = list_services_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.list_services_response)
}
void ServerReflectionResponse::set_allocated_error_response(::grpc::reflection::v1alpha::ErrorResponse* error_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_response();
  if (error_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(error_response);
    if (message_arena != submessage_arena) {
      error_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_response, submessage_arena);
    }
    set_has_error_response();
    _impl_.message_response_.error_response_ = error_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.error_response)
}
ServerReflectionResponse::ServerReflectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServerReflectionResponse)
}
ServerReflectionResponse::ServerReflectionResponse(const ServerReflectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerReflectionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.valid_host_){}
    , decltype(_impl_.original_request_){nullptr}
    , decltype(_impl_.message_response_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.valid_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.valid_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_valid_host().empty()) {
    _this->_impl_.valid_host_.Set(from._internal_valid_host(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_original_request()) {
    _this->_impl_.original_request_ = new ::grpc::reflection::v1alpha::ServerReflectionRequest(*from._impl_.original_request_);
  }
  clear_has_message_response();
  switch (from.message_response_case()) {
    case kFileDescriptorResponse: {
      _this->_internal_mutable_file_descriptor_response()->::grpc::reflection::v1alpha::FileDescriptorResponse::MergeFrom(
          from._internal_file_descriptor_response());
      break;
    }
    case kAllExtensionNumbersResponse: {
      _this->_internal_mutable_all_extension_numbers_response()->::grpc::reflection::v1alpha::ExtensionNumberResponse::MergeFrom(
          from._internal_all_extension_numbers_response());
      break;
    }
    case kListServicesResponse: {
      _this->_internal_mutable_list_services_response()->::grpc::reflection::v1alpha::ListServiceResponse::MergeFrom(
          from._internal_list_services_response());
      break;
    }
    case kErrorResponse: {
      _this->_internal_mutable_error_response()->::grpc::reflection::v1alpha::ErrorResponse::MergeFrom(
          from._internal_error_response());
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServerReflectionResponse)
}

inline void ServerReflectionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.valid_host_){}
    , decltype(_impl_.original_request_){nullptr}
    , decltype(_impl_.message_response_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.valid_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.valid_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_response();
}

ServerReflectionResponse::~ServerReflectionResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServerReflectionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerReflectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.valid_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.original_request_;
  if (has_message_response()) {
    clear_message_response();
  }
}

void ServerReflectionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerReflectionResponse::clear_message_response() {
// @@protoc_insertion_point(one_of_clear_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  switch (message_response_case()) {
    case kFileDescriptorResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_response_.file_descriptor_response_;
      }
      break;
    }
    case kAllExtensionNumbersResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_response_.all_extension_numbers_response_;
      }
      break;
    }
    case kListServicesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_response_.list_services_response_;
      }
      break;
    }
    case kErrorResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_response_.error_response_;
      }
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_RESPONSE_NOT_SET;
}


void ServerReflectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.valid_host_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.original_request_ != nullptr) {
    delete _impl_.original_request_;
  }
  _impl_.original_request_ = nullptr;
  clear_message_response();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReflectionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string valid_host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_valid_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionResponse.valid_host"));
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_original_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_descriptor_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_extension_numbers_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_services_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ErrorResponse error_response = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerReflectionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string valid_host = 1;
  if (!this->_internal_valid_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_valid_host().data(), static_cast<int>(this->_internal_valid_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionResponse.valid_host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_valid_host(), target);
  }

  // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2;
  if (this->_internal_has_original_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::original_request(this),
        _Internal::original_request(this).GetCachedSize(), target, stream);
  }

  // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4;
  if (_internal_has_file_descriptor_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::file_descriptor_response(this),
        _Internal::file_descriptor_response(this).GetCachedSize(), target, stream);
  }

  // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5;
  if (_internal_has_all_extension_numbers_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::all_extension_numbers_response(this),
        _Internal::all_extension_numbers_response(this).GetCachedSize(), target, stream);
  }

  // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6;
  if (_internal_has_list_services_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::list_services_response(this),
        _Internal::list_services_response(this).GetCachedSize(), target, stream);
  }

  // .grpc.reflection.v1alpha.ErrorResponse error_response = 7;
  if (_internal_has_error_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::error_response(this),
        _Internal::error_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServerReflectionResponse)
  return target;
}

size_t ServerReflectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string valid_host = 1;
  if (!this->_internal_valid_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_valid_host());
  }

  // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2;
  if (this->_internal_has_original_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.original_request_);
  }

  switch (message_response_case()) {
    // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4;
    case kFileDescriptorResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_response_.file_descriptor_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5;
    case kAllExtensionNumbersResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_response_.all_extension_numbers_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6;
    case kListServicesResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_response_.list_services_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ErrorResponse error_response = 7;
    case kErrorResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_response_.error_response_);
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReflectionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerReflectionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReflectionResponse::GetClassData() const { return &_class_data_; }


void ServerReflectionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerReflectionResponse*>(&to_msg);
  auto& from = static_cast<const ServerReflectionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_valid_host().empty()) {
    _this->_internal_set_valid_host(from._internal_valid_host());
  }
  if (from._internal_has_original_request()) {
    _this->_internal_mutable_original_request()->::grpc::reflection::v1alpha::ServerReflectionRequest::MergeFrom(
        from._internal_original_request());
  }
  switch (from.message_response_case()) {
    case kFileDescriptorResponse: {
      _this->_internal_mutable_file_descriptor_response()->::grpc::reflection::v1alpha::FileDescriptorResponse::MergeFrom(
          from._internal_file_descriptor_response());
      break;
    }
    case kAllExtensionNumbersResponse: {
      _this->_internal_mutable_all_extension_numbers_response()->::grpc::reflection::v1alpha::ExtensionNumberResponse::MergeFrom(
          from._internal_all_extension_numbers_response());
      break;
    }
    case kListServicesResponse: {
      _this->_internal_mutable_list_services_response()->::grpc::reflection::v1alpha::ListServiceResponse::MergeFrom(
          from._internal_list_services_response());
      break;
    }
    case kErrorResponse: {
      _this->_internal_mutable_error_response()->::grpc::reflection::v1alpha::ErrorResponse::MergeFrom(
          from._internal_error_response());
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerReflectionResponse::CopyFrom(const ServerReflectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReflectionResponse::IsInitialized() const {
  return true;
}

void ServerReflectionResponse::InternalSwap(ServerReflectionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.valid_host_, lhs_arena,
      &other->_impl_.valid_host_, rhs_arena
  );
  swap(_impl_.original_request_, other->_impl_.original_request_);
  swap(_impl_.message_response_, other->_impl_.message_response_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReflectionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[2]);
}

// ===================================================================

class FileDescriptorResponse::_Internal {
 public:
};

FileDescriptorResponse::FileDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.FileDescriptorResponse)
}
FileDescriptorResponse::FileDescriptorResponse(const FileDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileDescriptorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_descriptor_proto_){from._impl_.file_descriptor_proto_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.FileDescriptorResponse)
}

inline void FileDescriptorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_descriptor_proto_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FileDescriptorResponse::~FileDescriptorResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.FileDescriptorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_descriptor_proto_.~RepeatedPtrField();
}

void FileDescriptorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_descriptor_proto_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDescriptorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes file_descriptor_proto = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_file_descriptor_proto();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileDescriptorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes file_descriptor_proto = 1;
  for (int i = 0, n = this->_internal_file_descriptor_proto_size(); i < n; i++) {
    const auto& s = this->_internal_file_descriptor_proto(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.FileDescriptorResponse)
  return target;
}

size_t FileDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes file_descriptor_proto = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.file_descriptor_proto_.size());
  for (int i = 0, n = _impl_.file_descriptor_proto_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.file_descriptor_proto_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileDescriptorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileDescriptorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileDescriptorResponse::GetClassData() const { return &_class_data_; }


void FileDescriptorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileDescriptorResponse*>(&to_msg);
  auto& from = static_cast<const FileDescriptorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.file_descriptor_proto_.MergeFrom(from._impl_.file_descriptor_proto_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileDescriptorResponse::CopyFrom(const FileDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDescriptorResponse::IsInitialized() const {
  return true;
}

void FileDescriptorResponse::InternalSwap(FileDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.file_descriptor_proto_.InternalSwap(&other->_impl_.file_descriptor_proto_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDescriptorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[3]);
}

// ===================================================================

class ExtensionNumberResponse::_Internal {
 public:
};

ExtensionNumberResponse::ExtensionNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
}
ExtensionNumberResponse::ExtensionNumberResponse(const ExtensionNumberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExtensionNumberResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.extension_number_){from._impl_.extension_number_}
    , /*decltype(_impl_._extension_number_cached_byte_size_)*/{0}
    , decltype(_impl_.base_type_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.base_type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.base_type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_base_type_name().empty()) {
    _this->_impl_.base_type_name_.Set(from._internal_base_type_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
}

inline void ExtensionNumberResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.extension_number_){arena}
    , /*decltype(_impl_._extension_number_cached_byte_size_)*/{0}
    , decltype(_impl_.base_type_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.base_type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.base_type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExtensionNumberResponse::~ExtensionNumberResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExtensionNumberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extension_number_.~RepeatedField();
  _impl_.base_type_name_.Destroy();
}

void ExtensionNumberResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExtensionNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_number_.Clear();
  _impl_.base_type_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtensionNumberResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string base_type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_base_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ExtensionNumberResponse.base_type_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 extension_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_extension_number(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_extension_number(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExtensionNumberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string base_type_name = 1;
  if (!this->_internal_base_type_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base_type_name().data(), static_cast<int>(this->_internal_base_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ExtensionNumberResponse.base_type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base_type_name(), target);
  }

  // repeated int32 extension_number = 2;
  {
    int byte_size = _impl_._extension_number_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_extension_number(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ExtensionNumberResponse)
  return target;
}

size_t ExtensionNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 extension_number = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.extension_number_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._extension_number_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string base_type_name = 1;
  if (!this->_internal_base_type_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base_type_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExtensionNumberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExtensionNumberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExtensionNumberResponse::GetClassData() const { return &_class_data_; }


void ExtensionNumberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExtensionNumberResponse*>(&to_msg);
  auto& from = static_cast<const ExtensionNumberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extension_number_.MergeFrom(from._impl_.extension_number_);
  if (!from._internal_base_type_name().empty()) {
    _this->_internal_set_base_type_name(from._internal_base_type_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionNumberResponse::CopyFrom(const ExtensionNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionNumberResponse::IsInitialized() const {
  return true;
}

void ExtensionNumberResponse::InternalSwap(ExtensionNumberResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extension_number_.InternalSwap(&other->_impl_.extension_number_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.base_type_name_, lhs_arena,
      &other->_impl_.base_type_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtensionNumberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[4]);
}

// ===================================================================

class ListServiceResponse::_Internal {
 public:
};

ListServiceResponse::ListServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ListServiceResponse)
}
ListServiceResponse::ListServiceResponse(const ListServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){from._impl_.service_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ListServiceResponse)
}

inline void ListServiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListServiceResponse::~ListServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ListServiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_.~RepeatedPtrField();
}

void ListServiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ListServiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ListServiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_service_size()); i < n; i++) {
    const auto& repfield = this->_internal_service(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ListServiceResponse)
  return target;
}

size_t ListServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ListServiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1;
  total_size += 1UL * this->_internal_service_size();
  for (const auto& msg : this->_impl_.service_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServiceResponse::GetClassData() const { return &_class_data_; }


void ListServiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServiceResponse*>(&to_msg);
  auto& from = static_cast<const ListServiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.service_.MergeFrom(from._impl_.service_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServiceResponse::CopyFrom(const ListServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceResponse::IsInitialized() const {
  return true;
}

void ListServiceResponse::InternalSwap(ListServiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_.InternalSwap(&other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[5]);
}

// ===================================================================

class ServiceResponse::_Internal {
 public:
};

ServiceResponse::ServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServiceResponse)
}
ServiceResponse::ServiceResponse(const ServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServiceResponse)
}

inline void ServiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceResponse::~ServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ServiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ServiceResponse.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServiceResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServiceResponse)
  return target;
}

size_t ServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceResponse::GetClassData() const { return &_class_data_; }


void ServiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceResponse*>(&to_msg);
  auto& from = static_cast<const ServiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceResponse::CopyFrom(const ServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceResponse::IsInitialized() const {
  return true;
}

void ServiceResponse::InternalSwap(ServiceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[6]);
}

// ===================================================================

class ErrorResponse::_Internal {
 public:
};

ErrorResponse::ErrorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ErrorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.error_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.error_code_ = from._impl_.error_code_;
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ErrorResponse)
}

inline void ErrorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.error_code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ErrorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ErrorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
}

void ErrorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ErrorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpc.reflection.v1alpha.ErrorResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ErrorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ErrorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ErrorResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ErrorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // int32 error_code = 1;
  if (this->_internal_error_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ErrorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ErrorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ErrorResponse::GetClassData() const { return &_class_data_; }


void ErrorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ErrorResponse*>(&to_msg);
  auto& from = static_cast<const ErrorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_error_code() != 0) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  return true;
}

void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.error_code_, other->_impl_.error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_getter, &descriptor_table_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto_once,
      file_level_metadata_src_2fproto_2fgrpc_2freflection_2fv1alpha_2freflection_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace reflection
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServerReflectionRequest*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServerReflectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServerReflectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ExtensionRequest*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ExtensionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ExtensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServerReflectionResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServerReflectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServerReflectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::FileDescriptorResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::FileDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::FileDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ExtensionNumberResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ExtensionNumberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ExtensionNumberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ListServiceResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ListServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ListServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServiceResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ErrorResponse*
Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ErrorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ErrorResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
